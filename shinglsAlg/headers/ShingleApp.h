#pragma once
#include "../src/gsoap_autogenerated/soapShingleservice.h"
#include <vector>
#include <fstream>
#include "../headers/Shingles.h"
#include "../headers/staffClasses.h"
#include <locale>
#include <algorithm>
#include "../headers/ShingleAppLogger.h"

using namespace std;
/*
main class. It provides receiving massages and its processing
*/
class ShingleApp :
	public ShingleService
{
	vector<shingleAppStaff::ShingleAppText> textsArray; //texts in base
	float * findSimilar(char *txt); //function compares new text with others already in the base
	void initializeResponce(int sampNum, t__text * result); //creates t__text item for responce
	ShingleAppLogger * Log; //logger object. Sends messages in several streams
public:
	ShingleAppLogger * log(); //getter for Log field
	void loadSampls(); //gets base from file
	void saveSampls(); // saves base to file
	ShingleApp();
	~ShingleApp();
	virtual	int CompareText(t__text txt, t__result *res); //main method which process incoming request
	int ShingleApp::compareShingles(t__text txt, t__result *res);
};

